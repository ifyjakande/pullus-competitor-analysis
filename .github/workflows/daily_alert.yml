name: Daily Email Alerts

# This workflow runs every day at 8AM WAT to check for new dates in the data
# and send email alerts. It does NOT depend on source data hash changes because
# the continuous_update workflow may have already processed those changes.
# Instead, it checks last_processed.json to find dates that need email alerts.

on:
  schedule:
    - cron: '0 7 * * *'  # 8am WAT (7am UTC)
  workflow_dispatch:     # Manual trigger

permissions:
  contents: write

jobs:
  check-and-alert:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check for new dates and send email alerts
      env:
        GOOGLE_CREDENTIALS_PATH: ${{ secrets.GOOGLE_CREDENTIALS_PATH }}
        GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
        EMAIL_RECIPIENT: ${{ secrets.EMAIL_RECIPIENT }}
        CI: "true"
      run: |
        echo "üîç Checking for new dates to alert about..."
        python pullus_competitor_analyzer.py --check-and-alert

    - name: Commit updated tracking files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -f last_processed.json
        if git diff --staged --quiet; then
          echo "‚úÖ No new dates to process"
        else
          git commit -m "Update processed dates after email alert [skip ci]"
          git pull --rebase origin master
          git push
          echo "‚úÖ Updated processed dates in repository"
        fi
